daemon off;
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;


    {{ if service "hello" }}
    upstream hello {
        # write the address:port pairs for each healthy Hello node
        {{range service "hello"}}
        server {{.Address}}:{{.Port}};
        {{end}}
        least_conn;
    }{{ end }}

    {{ if service "world" }}
    upstream world {
        # write the address:port pairs for each healthy World node
        {{range service "world"}}
        server {{.Address}}:{{.Port}};
        {{end}}
        least_conn;
    }{{ end }}

    {{ if service "goodbye" }}
    upstream goodbye {
        # write the address:port pairs for each healthy Goodbye node
        {{range service "goodbye"}}
        server {{.Address}}:{{.Port}};
        {{end}}
        least_conn;
    }{{ end }}



    server {
        listen       80;
        server_name  _;

        root /usr/share/nginx/html;

        location /health {
            # requires http_stub_status_module
            stub_status;
            allow 127.0.0.1;
            deny all;
        }

        {{ if service "hello" }}
        location ^~ /hello {
            # strip '/hello' from the request before passing
            # it along to the Hello upstream
            rewrite ^/hello(/.*)$ $1 break;
            proxy_pass http://hello;
            proxy_redirect off;
        }{{end}}

        {{ if service "world" }}
        location ^~ /world {
            # strip '/world' from the request before passing
            # it along to the World upstream
            rewrite ^/world(/.*)$ $1 break;
            proxy_pass http://world;
            proxy_redirect off;
        }{{end}}

        {{ if service "goodbye" }}
        location ^~ /goodbye {
            # strip '/godbye' from the request before passing
            # it along to the World upstream
            rewrite ^/goodbye(/.*)$ $1 break;
            proxy_pass http://goodbye;
            proxy_redirect off;
        }{{end}}

    }
}
